.\" This manpage has been automatically generated by docbook2man 
.\" from a DocBook document.  This tool can be found at:
.\" <http://shell.ipoline.com/~elmert/comp/docbook2X/> 
.\" Please send any bug reports, improvements, comments, patches, 
.\" etc. to Steve Cheng <steve@ggi-project.org>.
.TH "MODULE-ASSISTANT" "8" "14 Octobre 2006" "" ""

.SH NOM
module-assistant \- Gérer les paquets de modules pour le noyau
.SH SYNOPSIS

\fBmodule-assistant\fR [ \fB-fihnqstv\fR ] [ \fB-k \fIrépertoire des en-têtes ou des sources\fB\fR ] [ \fB-l \fIliste des versions de noyau\fB\fR ] { \fBupdate\fR | \fBsearch\fR | \fBprepare\fR | \fBauto-install\fR | \fBlist\fR | \fBlist-available\fR | \fBlist-installed\fR | \fBauto-unpacked\fR | \fBget\fR | \fBbuild\fR | \fBinstall\fR | \fBclean\fR | \fBpurge\fR | \fBfakesource\fR } [ \fB\fIpkg\fB\fR\fI ...\fR ]


\fBm-a ...\fR

.SH "DESCRIPTION"
.PP
\fBmodule-assistant\fR est l'outil en ligne de commande qui 
permet de gérer les paquets source des modules préparés pour la 
distribution Debian. Il aide les utilisateurs à construire et à 
installer facilement un ou plusieurs paquets de modules destinés à un ou 
plusieurs noyaux.
.PP
À moins que l'option \fB-h\fR ou \fB--help\fR ne 
soit indiquée, une des commandes ci-dessous doit être précisée pour 
invoquer explicitement une fonction. Si aucune commande n'est précisée 
ou n'est valide et que l'outil dialog est disponible, 
une interface graphique simple apparaîtra et vous indiquera les 
fonctionnalités disponibles.
.PP
NOTE\~: ne pensez même pas à utiliser un paquet kernel-source-x.y.z pris 
au hasard (ou le tarball linux-x.y.z récupéré sur Internet) pour les 
faire passer pour les sources du noyau actuellement utilisé. \fBNe 
le faites pas\~!\fR Ces sources ne sont pas exactement celles 
utilisées pour construire le noyau actuellement exécuté et leur 
configuration ne correspond sans doute pas à la vôtre. Vous avez besoin 
du répertoire contenant les sources du noyau configurées, ou au moins du 
paquet dérivé linux-headers-... contenant la configuration du noyau 
pour la version exacte du noyau (l'ensemble de la chaîne de version est 
pris en compte). Si vous ne comprenez rien au texte ci-dessus, exécutez 
\fBm-a prepare\fR et/ou regardez la description et le 
contenu d'un paquet linux-headers-... Veuillez exécuter la commande 
\fBmodule-assistant prepare\fR avant toute autre chose.
.PP
Pour certains paquets, les en-têtes du noyau (linux-headers ou sources 
réduites) ne sont pas suffisants. Vous avez le choix entre utiliser un 
noyau complètement personnalisé et recréer les sources utilisées lors de 
la construction du noyau actuel. La commande 
\fBfakesource\fR peut être utile, voir ci-dessous pour les 
détails.
.PP
Afin de configurer correctement les sources d'un noyau, vous devez vous 
assurer que le fichier version.h est généré. Pour l'obtenir, configurez 
les options comme d'habitude (\fBmake menuconfig\fR etc.) 
et lancez \fBmake dep\fR (pour les noyaux 2.4.x) ou 
\fBmake prepare\fR (pour les plus récents).
.SH "COMMANDES"
.PP
La plupart des commandes nécessitent de préciser le nom des paquets 
auxquels celles-ci doivent s'appliquer. Le mot-clé 
\fBpkg\fR peut être un nom simple (un nom de paquet) ou 
plusieurs noms. Le mot-clé \fBall\fR correspond à la liste 
de tous les paquets disponibles, le mot-clé \fBalli\fR à la 
liste de tous les paquets source actuellement installés et le mot-clé 
\fBallu\fR à la liste des paquets qui semblent installés et 
décompressés dans le répertoire de base des sources. Si le nom indiqué 
ne correspond à aucun paquet source, \fBmodule-assistant\fR 
(abrégé \fBm-a\fR) essaiera les suffixes habituels comme 
-kernel, -driver, -module, -source ainsi que les combinaisons de 
ceux-ci.
.PP
Plusieurs commandes peuvent être indiquées en une seule exécution, par 
ex. «\~\fBm-a clean,get,build arla cdfs\fR\~» est le moyen 
rapide d'écrire «\~module-assistant clean arla-modules-source\~; 
module-assistant clean cdfs-src\~; module-assistant get 
arla-modules-source cdfs-src\~; module-assistant build 
arla-modules-source cdfs-src\~».
.PP
Si vous n'aimez pas l'interface dialog/whiptail, utilisez l'option 
\fB-t\fR pour la désactiver.
.PP
.TP
\fBupdate\fR
Resynchroniser les fichiers d'index depuis leurs sources. Cela se 
produit avec certains scripts de 
paquets. \fBmodule-assistant\fR dispose d'une liste de 
paquets inclue par défaut. D'autres paquets peuvent cependant être 
enregistrés par \fBmodule-assistant\fR si le 
responsable ajoute le script helper adéquat.
.TP
\fBprepare\fR
Essaie de déterminer le nom du paquet linux-headers requis (celui 
correspondant soit au noyau actuel, soit aux versions indiquées avec 
\-l), et si besoin, l'installe et crée le lien symbolique 
/usr/src/linux\&. Installe également le paquet 
build-essential pour s'assurer qu'un environnement de compilation 
convenable est installé.
.TP
\fBfakesource\fR
Fonction expérimentale qui essaie de déterminer le nom du paquet 
kernel-source requis ou compatible, l'installe, puis modifie le 
Makefile pour ressembler au source original et lance les routines de 
configuration si besoin. Attention\~: NE VOUS FIEZ PAS AU SOURCE 
RÉSULTANT. Il peut être très différent de la version originale.
.TP
\fBlist | list-available | la\fR
list-available (abrégé la) 
présente une liste des détails sur les paquets indiqués, dont la 
version installée, les versions installables et les paquets binaires 
récemment construits. Si aucun nom de paquet n'est indiqué, les 
détails de tous les paquets seront affichés. L'option 
\fB-v\fR affiche les chemins complets des paquets.
.TP
\fBlist-installed | li\fR
Analogue à list alli\&. Agit comme 
list-available mais limite la liste aux paquets 
source installés.
.TP
\fBsearch\fR
Analogue à list \-s\&. Cherche d'abord des paquets 
compilés localement, puis en cas d'échec cherche avec apt-cache des 
candidats alternatifs pour l'installation.
.TP
\fBget\fR
get suivi d'une liste de paquets installe les 
paquets source et les télécharge si nécessaire.
.TP
\fBbuild\fR
build doit être suivi d'un ou plusieurs paquets 
source à construire. Les sources du noyau adaptées au noyau exécuté 
sont choisies, à moins que des répertoires particuliers aient été 
indiqués. Si la construction échoue, examinez le fichier journal le 
plus récent dans /var/cache/modass (ou dans le répertoire indiqué 
par l'utilisateur).
.TP
\fBinstall\fR
install doit être suivi d'un ou plusieurs paquets 
à installer. Le dernier paquet construit correspondant au noyau 
exécuté est choisi.
.TP
\fBauto-install | a-i\fR
auto-install doit être suivi d'un ou plusieurs 
paquets à installer. Cette fonction exécutera 
prepare pour faire en sorte que votre système 
puisse construire des paquets, téléchargera le paquet source, 
essaiera de le construire pour le noyau exécuté et 
l'installera. Vous pouvez utiliser les raccourcis 
alli pour sélectionner tous les paquets source de 
modules installés, ou allu pour sélectionner 
uniquement les paquets déjà décompressés (similaire à ce que fait 
normalement l'outil make-kpkg, en regardant 
$MODULE_LOC).
.TP
\fBauto-build | a-b\fR
Analogue à auto-install, mais n'installe pas le 
paquet immédiatement.
.TP
\fBclean\fR
clean nettoie les répertoires de construction des 
paquets.
.TP
\fBpurge\fR
purge supprime les informations en cache d'un 
paquet source et supprime tous les paquets binaires qui ont été 
construits localement à partir de ce paquet source (et dont 
module-assistant a connaissance). À UTILISER AVEC PRÉCAUTION\~!
.SH "OPTIONS"
.TP
\fB-t\fR
.TP
\fB--text-mode\fR
Afficher les journaux bruts de construction, d'installation et de 
mise à jour, au lieu d'afficher des barres de progression.
.TP
\fB-k\fR
.TP
\fB--kernel-dir\fR
Permet d'indiquer les répertoires de sources du noyau à utiliser lors 
des constructions. Vous pouvez indiquer plusieurs répertoires avec 
plusieurs options, ou séparés par des virgules ou des séparateurs de 
ligne (par ex. en utilisant \fB-k "`echo 
/usr/src/linux-headers-*`"\fR). Les versions des noyaux 
détectées dans ces répertoires sont automatiquement ajoutées à la 
liste des versions de noyaux cibles (voir 
\fB--kvers-list\fR pour plus de détails).
.TP
\fB-l\fR
.TP
\fB--kvers-list\fR
Permet d'indiquer la liste des noms de version des noyaux (comme dans 
KVERS) à traiter. Si le paramètre n'est pas précisé, la version du 
noyau en cours d'utilisation est utilisée. Si d'autres répertoires de 
sources sont indiqués après l'option \fB--kernel-dir\fR, 
les versions des noyaux qui y sont présents sont également traitées.

Les emplacements des sources ou des en-têtes de ces versions du noyau 
sont détectées grâce à une recherche des emplacements habituellement 
utilisés sur les systèmes Linux, ou doivent être indiquées à l'aide 
de l'option \fB--kernel-dir\fR\&.
.TP
\fB-v\fR
.TP
\fB--verbose\fR
Affiche un peu plus d'informations, par exemple les chemins complets 
des paquets binaires.
.TP
\fB-n\fR
.TP
\fB--no-rebuild\fR
Si un paquet à générer existe déjà dans le répertoire cible 
(peut-être dans une version plus ancienne), l'option 
\fB-n\fR évite de reconstruire le paquet.

Dans le comportement par défaut, le paquet n'est pas reconstruit si 
un fichier au nom exactement identique est présent. Le nouveau nom de 
fichier peut en effet être détecté avant le démarrage du processus de 
construction, suivant le paquet source concerné.
.TP
\fB-f\fR
.TP
\fB--force\fR
Ne vérifie jamais le fichier cible (en cas de version différente) et 
force la reconstruction. Pour la commande get, télécharge une 
nouvelle version du paquet même si celui-ci est déjà installé.
.TP
\fB-u\fR
.TP
\fB--userdir\fR
Toutes les variables d'environnement pertinentes contenant des 
chemins sont redirigées vers de nouveaux répertoires situés 
en-dessous de celui indiqué par cette option.
.TP
\fB-i\fR
.TP
\fB--non-inter\fR
En cas d'échec de la construction du paquet, continuer avec d'autres 
paquets candidats. Par défaut, module-assistant suggérera d'examiner 
le journal de construction. Cette option peut également modifier le 
comportement de dpkg et d'apt-get afin de réduire le besoin 
d'interaction avec l'utilisateur et installer les dépendances de 
constructions nécessaires.
.TP
\fB-o\fR
.TP
\fB--unpack-once\fR
Essayer de ne pas décompresser deux fois. Cette option doit être 
également indiquée lorsque le paquet est décompressé pour la première 
fois. Cette option est expérimentale, ne vous y fiez pas.
.TP
\fB-O\fR
.TP
\fB--not-unpack\fR
Ne jamais décompresser l'archive source. Cette option est utile 
lorsque les sources d'un module ont été modifiées par l'utilisateur.
.TP
\fB-q\fR
.TP
\fB--quiet\fR
Ne pas afficher certains messages bavards au cours du traitement.
.TP
\fB-S\fR
.TP
\fB--sudo-cmd\fR
Indique la commande à utiliser en remplacement de 
sudo pour les commandes en tant que 
superutilisateur.
.TP
\fB-s\fR
.TP
\fB--apt-search\fR
Consultez la commande search pour les détails.
.TP
\fB-h\fR
.TP
\fB--help\fR
Affiche un récapitulatif des possibilités d'utilisation.
.SH "VARIABLES D'ENVIRONNEMENT"
.PP
Vous pouvez exporter les variables d'environnement suivantes pour 
modifier le comportement des scripts de construction. Certains paquets 
peuvent les ignorer ou les interpréter diversement.
.TP
\fBKPKG_DEST_DIR\fR
KPKG_DEST_DIR indique le répertoire cible où les 
paquets Debian résultants devraient être installés. Cependant, de 
nombreux paquets ignorent cette variable et installent le fichier 
dans le répertoire de niveau supérieur à celui des sources du noyau 
ou à celui du répertoire actuel.
.TP
\fBKERNELDIRS\fR
KERNELDIRS indique ou étend la liste des 
répertoires de sources ou d'en-têtes de noyau pour lesquels m-a 
devrait construire les modules. Consultez l'option \-k pour les 
détails.
.TP
\fBSIGNCHANGES\fR
Si SIGNCHANGES est positionnée, des fichiers 
\&.changes seront générés (en appelant la règle 
kdist_image à la place de kdist) et debsign (ou 
gpg ou pgp) sera exécuté pour signer ces fichiers.
.TP
\fBKMAINT | DEBFULLNAME | DEBNAME\fR
Indique le nom réel de la personne qui construit le paquet, concerne 
uniquement le fichier .changes.
.TP
\fBKEMAIL | DEBEMAIL\fR
Indique l'adresse de courriel de la personne qui construit le 
paquet, concerne uniquement le fichier .changes.
.TP
\fBMODULE_LOC\fR
Indique un emplacement différent des répertoires des sources des 
modules. Par défaut \fI/usr/src/modules\fR\&.
.TP
\fBMA_VARDIR\fR
Indique un emplacement différent des données de cache, utilisé par 
les scripts helper de \fBmodule-assistant\fR\&. Par 
défaut \fI/var/cache/modass\fR\&.
.TP
\fBMOD_SRCDIR\fR
Indique un emplacement différent des archives des sources de 
modules. Par défaut \fI/usr/src\fR\&.
.TP
\fBROOT_CMD\fR
Commande d'encapsulation pour exécuter des commandes en tant que 
superutilisateur. Si vous n'êtes pas superutilisateur, fakeroot est 
automatiquement choisi. Cette variable est interprétée par les 
paquets, qui peuvent néanmoins l'ignorer. Cependant, vous pouvez 
lancer module-assistant à l'intérieur de l'encapsuleur ROOT_CMD.
.SH "UTILISATION AVEC DES DROITS RESTREINTS"
.PP
\fBmodule-assistant\fR peut fonctionner sans être 
superutilisateur. Cependant, vous ne pouvez pas utiliser apt-get ou dpkg 
pour installer les paquets, et ne pouvez pas écrire dans 
/var/cache/modass sur un système Debian habituel. Ainsi les commandes 
\fBget\fR, \fBinstall\fR, 
\fBauto-install\fR et \fBprepare\fR ne sont 
pas accessibles aux utilisateurs simples. Toutefois, si le programme 
sudo est installé, il sera appelé lors des opérations apt-get et 
dpkg. Toutes les autres commandes exceptée \fBlist\fR 
nécessitent des variables d'environnement supplémentaires pour indiquer 
des répertoires cibles dans lesquels l'utilisateur peut écrire. Elles 
peuvent être toutes redirigées vers un répertoire accessible en écriture 
avec l'option \-u.
.SH "FICHIERS"
.TP
\fB\fI/usr/share/modass/packages/*\fB\fR
Liste des scripts helper fournis avec le paquet module-assistant.
.TP
\fB\fI/usr/share/modass/overrides/*\fB\fR
Scripts helper installés par d'autres paquets.
.SH "VOIR AUSSI"
.PP
\fB       make-kpkg
\fR(1)
,
\fB                \fI/usr/share/doc/module-assistant/README\fB
\fR
.SH "BOGUES"
.PP
Consultez la page des bogues de 
module-assistant <URL:http://bugs.debian.org/src:module-assistant>\&. Si vous souhaitez signaler un bogue dans 
module-assistant, veuillez utiliser la commande \fBreportbug
\fR(1)\&.
.SH "CODES DE RETOUR"
.TP
\fB0\fR
Succès
.TP
\fB1..249\fR
Erreurs diverses lors du processus de construction
.TP
\fB254\fR
Problèmes de permissions
.TP
\fB255\fR
erreur corrigible sur intervention de l'utilisateur
.SH "À FAIRE"
.PP
Liste rapide (sortie rapide sans détails)
.PP
Intégration à APT et/ou au système init
.PP
Debianisation «\~agressive\~» en utilisant un jeu de gabarits, afin de 
générer un paquet depuis n'importe quelle source apparaissant comme 
compatible avec le système de construction du noyau\~2.6.
.PP
Transformation automatique des sources du noyau pour générer des paquets .udeb.
.SH "AUTEUR"
.PP
Module-Assistant a été écrit par Eduard Bloch 
<blade@debian.org> pour la distribution Debian.
.SH TRADUCTION
Cette page de manuel a été traduite par Simon Paillard
<simon DOT paillard AT resel DOT enst-bretagne DOT fr> et les membres de
la liste <debian-l10n-french AT lists DOT debian DOT org>.
.PP
L'équipe de traduction a fait le maximum pour réaliser une adaptation
française de qualité.
.PP
La version anglaise la plus à jour de ce document est toujours
consultable via la commande\ : man \-L C module-assistant
.PP
N'hésitez pas à signaler à l'auteur ou au traducteur, selon le cas,
toute erreur dans cette page de manuel.
